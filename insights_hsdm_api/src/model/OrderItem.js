/**
 * Insights Service Catalog API
 * This is a API to fetch and order catalog items from different cloud sources
 *
 * OpenAPI spec version: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import ParameterValue from './ParameterValue';





/**
* The OrderItem model module.
* @module model/OrderItem
* @version 1.0.0
*/
export default class OrderItem {
    /**
    * Constructs a new <code>OrderItem</code>.
    * @alias module:model/OrderItem
    * @class
    * @param count {Number} 
    * @param parameters {Array.<module:model/ParameterValue>} 
    */

    constructor(count, parameters) {
        

        
        

        this['count'] = count;this['parameters'] = parameters;

        
    }

    /**
    * Constructs a <code>OrderItem</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/OrderItem} obj Optional instance to populate.
    * @return {module:model/OrderItem} The populated <code>OrderItem</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderItem();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [ParameterValue]);
            }
            if (data.hasOwnProperty('catalog_id')) {
                obj['catalog_id'] = ApiClient.convertToType(data['catalog_id'], 'String');
            }
            if (data.hasOwnProperty('provider_id')) {
                obj['provider_id'] = ApiClient.convertToType(data['provider_id'], 'String');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('ordered_at')) {
                obj['ordered_at'] = ApiClient.convertToType(data['ordered_at'], 'Date');
            }
            if (data.hasOwnProperty('completed_at')) {
                obj['completed_at'] = ApiClient.convertToType(data['completed_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('external_ref')) {
                obj['external_ref'] = ApiClient.convertToType(data['external_ref'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {String} id
    */
    id = undefined;
    /**
    * @member {Number} count
    */
    count = undefined;
    /**
    * @member {Array.<module:model/ParameterValue>} parameters
    */
    parameters = undefined;
    /**
    * Stores the Catalog ID from the provider
    * @member {String} catalog_id
    */
    catalog_id = undefined;
    /**
    * ID of the provider object
    * @member {String} provider_id
    */
    provider_id = undefined;
    /**
    * ID of the order object
    * @member {String} order_id
    */
    order_id = undefined;
    /**
    * Current State of this order item
    * @member {module:model/OrderItem.StateEnum} state
    */
    state = undefined;
    /**
    * @member {Date} created_at
    */
    created_at = undefined;
    /**
    * @member {Date} ordered_at
    */
    ordered_at = undefined;
    /**
    * @member {Date} completed_at
    */
    completed_at = undefined;
    /**
    * @member {Date} updated_at
    */
    updated_at = undefined;
    /**
    * An external reference from the provider that can be used to track the progress of the order item
    * @member {String} external_ref
    */
    external_ref = undefined;






    /**
    * Allowed values for the <code>state</code> property.
    * @enum {String}
    * @readonly
    */
    static StateEnum = {
    
        /**
         * value: "Created"
         * @const
         */
        "Created": "Created",
    
        /**
         * value: "Ordered"
         * @const
         */
        "Ordered": "Ordered",
    
        /**
         * value: "Failed"
         * @const
         */
        "Failed": "Failed",
    
        /**
         * value: "Completed"
         * @const
         */
        "Completed": "Completed"    
    };



}


