// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PlatformCard /> should choose card image 1`] = `
<PlatformCard
  description="desc"
  modified="Foo"
>
  <GalleryItem>
    <div>
      <Styled(Card)>
        <Card
          className="sc-AxhUy kEBXQD"
        >
          <article
            className="pf-c-card sc-AxhUy kEBXQD"
            data-ouia-component-id="OUIA-Generated-Card-2"
            data-ouia-component-type="PF4/Card"
            data-ouia-safe={true}
          >
            <CardHeader>
              <div
                className="pf-c-card__header"
              >
                <ImageWithDefault
                  height="40"
                  src="test-file-stub"
                  width="80"
                >
                  <img
                    height="40"
                    src="test-file-stub"
                    width="80"
                  />
                </ImageWithDefault>
              </div>
            </CardHeader>
            <Styled(CardBody)>
              <CardBody
                className="sc-AxheI jOYejY"
              >
                <div
                  className="pf-c-card__body sc-AxheI jOYejY"
                >
                  <TextContent>
                    <div
                      className="pf-c-content"
                    >
                      <CatalogLink
                        pathname="/platform/platform-templates"
                        searchParams={
                          Object {
                            "platform": undefined,
                          }
                        }
                      >
                        <Styled(Component)
                          to={
                            Object {
                              "hash": undefined,
                              "pathname": "/platform/platform-templates",
                              "search": "?platform=undefined",
                            }
                          }
                        >
                          <Component
                            className="sc-AxiKw drCTeX"
                            to={
                              Object {
                                "hash": undefined,
                                "pathname": "/platform/platform-templates",
                                "search": "?platform=undefined",
                              }
                            }
                          >
                            <Link
                              className="sc-AxiKw drCTeX"
                              to={
                                Object {
                                  "hash": undefined,
                                  "pathname": "/platform/platform-templates",
                                  "search": "?platform=undefined",
                                }
                              }
                            >
                              <LinkAnchor
                                className="sc-AxiKw drCTeX"
                                href="/platform/platform-templates?platform=undefined"
                                navigate={[Function]}
                              >
                                <a
                                  className="sc-AxiKw drCTeX"
                                  href="/platform/platform-templates?platform=undefined"
                                  onClick={[Function]}
                                >
                                  <Text
                                    className="pf-u-mb-0"
                                    component="h3"
                                  >
                                    <h3
                                      className="pf-u-mb-0"
                                      data-pf-content={true}
                                    >
                                      <styled.div>
                                        <div
                                          className="sc-AxirZ ZcaGf"
                                        />
                                      </styled.div>
                                    </h3>
                                  </Text>
                                </a>
                              </LinkAnchor>
                            </Link>
                          </Component>
                        </Styled(Component)>
                      </CatalogLink>
                    </div>
                  </TextContent>
                  <ItemDetails
                    description="desc"
                    modified="Foo"
                    toDisplay={
                      Array [
                        "description",
                        "modified",
                      ]
                    }
                  >
                    <Truncate
                      ellipsis={
                        <Tooltip
                          content={
                            <div>
                              desc
                            </div>
                          }
                        >
                          <span>
                            ...
                          </span>
                        </Tooltip>
                      }
                      key="tcard-prop-description"
                      lines={3}
                      trimWhitespace={false}
                      width={0}
                    >
                      <span
                        width={0}
                      >
                        <span />
                        <span>
                          <styled.div
                            key="card-prop-description"
                          >
                            <div
                              className="sc-AxjAm dMwTTJ"
                            >
                              desc
                            </div>
                          </styled.div>
                        </span>
                        <span
                          style={
                            Object {
                              "left": 0,
                              "position": "fixed",
                              "top": 0,
                              "visibility": "hidden",
                            }
                          }
                        >
                          <Tooltip
                            content={
                              <div>
                                desc
                              </div>
                            }
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={false}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-3"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": null,
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    <div>
                                      desc
                                    </div>
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "left": "pf-m-left",
                                  "right": "pf-m-right",
                                  "top": "pf-m-top",
                                }
                              }
                              trigger={
                                <span
                                  aria-describedby="pf-tooltip-3"
                                >
                                  ...
                                </span>
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <span
                                  aria-describedby="pf-tooltip-3"
                                >
                                  ...
                                </span>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </span>
                      </span>
                    </Truncate>
                    <Truncate
                      ellipsis={
                        <Tooltip
                          content={
                            <div>
                              Foo
                            </div>
                          }
                        >
                          <span>
                            ...
                          </span>
                        </Tooltip>
                      }
                      key="tcard-prop-modified"
                      lines={3}
                      trimWhitespace={false}
                      width={0}
                    >
                      <span
                        width={0}
                      >
                        <span />
                        <span>
                          <styled.div
                            key="card-prop-modified"
                          >
                            <div
                              className="sc-AxjAm dMwTTJ"
                            >
                              Foo
                            </div>
                          </styled.div>
                        </span>
                        <span
                          style={
                            Object {
                              "left": 0,
                              "position": "fixed",
                              "top": 0,
                              "visibility": "hidden",
                            }
                          }
                        >
                          <Tooltip
                            content={
                              <div>
                                Foo
                              </div>
                            }
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={false}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-4"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": null,
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    <div>
                                      Foo
                                    </div>
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "left": "pf-m-left",
                                  "right": "pf-m-right",
                                  "top": "pf-m-top",
                                }
                              }
                              trigger={
                                <span
                                  aria-describedby="pf-tooltip-4"
                                >
                                  ...
                                </span>
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <span
                                  aria-describedby="pf-tooltip-4"
                                >
                                  ...
                                </span>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </span>
                      </span>
                    </Truncate>
                  </ItemDetails>
                </div>
              </CardBody>
            </Styled(CardBody)>
            <CardFooter>
              <div
                className="pf-c-card__footer"
              />
            </CardFooter>
          </article>
        </Card>
      </Styled(Card)>
    </div>
  </GalleryItem>
</PlatformCard>
`;

exports[`<PlatformCard /> should render correctly 1`] = `
<PlatformCard
  description="desc"
  modified="Foo"
>
  <GalleryItem>
    <div>
      <Styled(Card)>
        <Card
          className="sc-AxhUy kEBXQD"
        >
          <article
            className="pf-c-card sc-AxhUy kEBXQD"
            data-ouia-component-id="OUIA-Generated-Card-1"
            data-ouia-component-type="PF4/Card"
            data-ouia-safe={true}
          >
            <CardHeader>
              <div
                className="pf-c-card__header"
              >
                <ImageWithDefault
                  height="40"
                  src="test-file-stub"
                  width="80"
                >
                  <img
                    height="40"
                    src="test-file-stub"
                    width="80"
                  />
                </ImageWithDefault>
              </div>
            </CardHeader>
            <Styled(CardBody)>
              <CardBody
                className="sc-AxheI jOYejY"
              >
                <div
                  className="pf-c-card__body sc-AxheI jOYejY"
                >
                  <TextContent>
                    <div
                      className="pf-c-content"
                    >
                      <CatalogLink
                        pathname="/platform/platform-templates"
                        searchParams={
                          Object {
                            "platform": undefined,
                          }
                        }
                      >
                        <Styled(Component)
                          to={
                            Object {
                              "hash": undefined,
                              "pathname": "/platform/platform-templates",
                              "search": "?platform=undefined",
                            }
                          }
                        >
                          <Component
                            className="sc-AxiKw drCTeX"
                            to={
                              Object {
                                "hash": undefined,
                                "pathname": "/platform/platform-templates",
                                "search": "?platform=undefined",
                              }
                            }
                          >
                            <Link
                              className="sc-AxiKw drCTeX"
                              to={
                                Object {
                                  "hash": undefined,
                                  "pathname": "/platform/platform-templates",
                                  "search": "?platform=undefined",
                                }
                              }
                            >
                              <LinkAnchor
                                className="sc-AxiKw drCTeX"
                                href="/platform/platform-templates?platform=undefined"
                                navigate={[Function]}
                              >
                                <a
                                  className="sc-AxiKw drCTeX"
                                  href="/platform/platform-templates?platform=undefined"
                                  onClick={[Function]}
                                >
                                  <Text
                                    className="pf-u-mb-0"
                                    component="h3"
                                  >
                                    <h3
                                      className="pf-u-mb-0"
                                      data-pf-content={true}
                                    >
                                      <styled.div>
                                        <div
                                          className="sc-AxirZ ZcaGf"
                                        />
                                      </styled.div>
                                    </h3>
                                  </Text>
                                </a>
                              </LinkAnchor>
                            </Link>
                          </Component>
                        </Styled(Component)>
                      </CatalogLink>
                    </div>
                  </TextContent>
                  <ItemDetails
                    description="desc"
                    modified="Foo"
                    toDisplay={
                      Array [
                        "description",
                        "modified",
                      ]
                    }
                  >
                    <Truncate
                      ellipsis={
                        <Tooltip
                          content={
                            <div>
                              desc
                            </div>
                          }
                        >
                          <span>
                            ...
                          </span>
                        </Tooltip>
                      }
                      key="tcard-prop-description"
                      lines={3}
                      trimWhitespace={false}
                      width={0}
                    >
                      <span
                        width={0}
                      >
                        <span />
                        <span>
                          <styled.div
                            key="card-prop-description"
                          >
                            <div
                              className="sc-AxjAm dMwTTJ"
                            >
                              desc
                            </div>
                          </styled.div>
                        </span>
                        <span
                          style={
                            Object {
                              "left": 0,
                              "position": "fixed",
                              "top": 0,
                              "visibility": "hidden",
                            }
                          }
                        >
                          <Tooltip
                            content={
                              <div>
                                desc
                              </div>
                            }
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={false}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-1"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": null,
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    <div>
                                      desc
                                    </div>
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "left": "pf-m-left",
                                  "right": "pf-m-right",
                                  "top": "pf-m-top",
                                }
                              }
                              trigger={
                                <span
                                  aria-describedby="pf-tooltip-1"
                                >
                                  ...
                                </span>
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <span
                                  aria-describedby="pf-tooltip-1"
                                >
                                  ...
                                </span>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </span>
                      </span>
                    </Truncate>
                    <Truncate
                      ellipsis={
                        <Tooltip
                          content={
                            <div>
                              Foo
                            </div>
                          }
                        >
                          <span>
                            ...
                          </span>
                        </Tooltip>
                      }
                      key="tcard-prop-modified"
                      lines={3}
                      trimWhitespace={false}
                      width={0}
                    >
                      <span
                        width={0}
                      >
                        <span />
                        <span>
                          <styled.div
                            key="card-prop-modified"
                          >
                            <div
                              className="sc-AxjAm dMwTTJ"
                            >
                              Foo
                            </div>
                          </styled.div>
                        </span>
                        <span
                          style={
                            Object {
                              "left": 0,
                              "position": "fixed",
                              "top": 0,
                              "visibility": "hidden",
                            }
                          }
                        >
                          <Tooltip
                            content={
                              <div>
                                Foo
                              </div>
                            }
                          >
                            <Popper
                              appendTo={[Function]}
                              distance={15}
                              enableFlip={true}
                              flipBehavior={
                                Array [
                                  "top",
                                  "right",
                                  "bottom",
                                  "left",
                                  "top",
                                  "right",
                                  "bottom",
                                ]
                              }
                              isVisible={false}
                              onBlur={[Function]}
                              onDocumentClick={false}
                              onDocumentKeyDown={[Function]}
                              onFocus={[Function]}
                              onMouseEnter={[Function]}
                              onMouseLeave={[Function]}
                              onTriggerEnter={[Function]}
                              placement="top"
                              popper={
                                <div
                                  className="pf-c-tooltip"
                                  id="pf-tooltip-2"
                                  role="tooltip"
                                  style={
                                    Object {
                                      "maxWidth": null,
                                      "opacity": 0,
                                      "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
                                    }
                                  }
                                >
                                  <TooltipArrow />
                                  <TooltipContent
                                    isLeftAligned={false}
                                  >
                                    <div>
                                      Foo
                                    </div>
                                  </TooltipContent>
                                </div>
                              }
                              popperMatchesTriggerWidth={false}
                              positionModifiers={
                                Object {
                                  "bottom": "pf-m-bottom",
                                  "left": "pf-m-left",
                                  "right": "pf-m-right",
                                  "top": "pf-m-top",
                                }
                              }
                              trigger={
                                <span
                                  aria-describedby="pf-tooltip-2"
                                >
                                  ...
                                </span>
                              }
                              zIndex={9999}
                            >
                              <FindRefWrapper
                                onFoundRef={[Function]}
                              >
                                <span
                                  aria-describedby="pf-tooltip-2"
                                >
                                  ...
                                </span>
                              </FindRefWrapper>
                            </Popper>
                          </Tooltip>
                        </span>
                      </span>
                    </Truncate>
                  </ItemDetails>
                </div>
              </CardBody>
            </Styled(CardBody)>
            <CardFooter>
              <div
                className="pf-c-card__footer"
              />
            </CardFooter>
          </article>
        </Card>
      </Styled(Card)>
    </div>
  </GalleryItem>
</PlatformCard>
`;
