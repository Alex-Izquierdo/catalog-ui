// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PlatformItem /> should render correctly 1`] = `
<PlatformItem
  id="Foo"
>
  <Styled(Card)
    key="Foo"
  >
    <Card
      className="sc-fzozJi dCCegk"
    >
      <article
        className="pf-c-card sc-fzozJi dCCegk"
      >
        <CardHeader>
          <div
            className="pf-c-card__header pf-c-title pf-m-md"
          >
            <Level>
              <div
                className="pf-l-level"
              >
                <CardIcon
                  height={40}
                  style={Object {}}
                >
                  <styled.div
                    height={40}
                  >
                    <div
                      className="sc-AxhCb kcBhCv"
                      height={40}
                    >
                      <IconPlaceholder
                        height={40}
                      >
                        <svg
                          height={40}
                          width={40}
                        >
                          <circle
                            cx={20}
                            cy={20}
                            fill="#ecebeb"
                            r={20}
                          />
                        </svg>
                      </IconPlaceholder>
                      <Styled(t)
                        delayTime={0}
                        height={0}
                        hidden={true}
                        onError={[Function]}
                        onLoad={[Function]}
                        src="test-file-stub"
                        threshold={2000}
                      >
                        <t
                          afterLoad={[Function]}
                          beforeLoad={[Function]}
                          className="sc-AxiKw kPfjgK"
                          delayMethod="throttle"
                          delayTime={0}
                          effect=""
                          height={0}
                          hidden={true}
                          onError={[Function]}
                          onLoad={[Function]}
                          placeholderSrc=""
                          src="test-file-stub"
                          threshold={2000}
                          visibleByDefault={false}
                          wrapperClassName=""
                        >
                          <t
                            afterLoad={[Function]}
                            beforeLoad={[Function]}
                            className="sc-AxiKw kPfjgK"
                            delayMethod="throttle"
                            delayTime={0}
                            height={0}
                            threshold={2000}
                            visibleByDefault={false}
                          >
                            <img
                              className="sc-AxiKw kPfjgK"
                              height={0}
                              hidden={true}
                              onError={[Function]}
                              onLoad={[Function]}
                              src="test-file-stub"
                            />
                          </t>
                        </t>
                      </Styled(t)>
                    </div>
                  </styled.div>
                </CardIcon>
              </div>
            </Level>
          </div>
        </CardHeader>
        <ServiceOfferingCardBody
          id="Foo"
        >
          <Styled(CardBody)>
            <CardBody
              className="sc-AxmLO dGjJwL"
            >
              <div
                className="pf-c-card__body sc-AxmLO dGjJwL"
              >
                <TextContent>
                  <div
                    className="pf-c-content"
                  >
                    <ConditionalLink>
                      <Text
                        component="h3"
                      >
                        <h3
                          className=""
                          data-pf-content={true}
                        >
                          <styled.div>
                            <div
                              className="sc-Axmtr TurKp"
                            />
                          </styled.div>
                        </h3>
                      </Text>
                    </ConditionalLink>
                  </div>
                </TextContent>
                <ItemDetails
                  id="Foo"
                  toDisplay={
                    Array [
                      "long_description",
                    ]
                  }
                >
                  <styled.div
                    key="card-prop-long_description"
                  >
                    <div
                      className="sc-AxhUy cLUHxg"
                    />
                  </styled.div>
                </ItemDetails>
              </div>
            </CardBody>
          </Styled(CardBody)>
        </ServiceOfferingCardBody>
        <CardFooter>
          <div
            className="pf-c-card__footer"
          />
        </CardFooter>
      </article>
    </Card>
  </Styled(Card)>
</PlatformItem>
`;
