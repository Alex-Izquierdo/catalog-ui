// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PortfolioItem /> should render correctly 1`] = `
<PortfolioItemWrapper
  initialEntries={
    Array [
      "/foo/url",
    ]
  }
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <MemoryRouter
      initialEntries={
        Array [
          "/foo/url",
        ]
      }
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "ngd7bq",
                "pathname": "/foo/url",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "ngd7bq",
              "pathname": "/foo/url",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Route
          render={[Function]}
          to="/foo/url"
        >
          <PortfolioItem
            closeUrl="/close"
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "ngd7bq",
                    "pathname": "/foo/url",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "ngd7bq",
                  "pathname": "/foo/url",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "ngd7bq",
                "pathname": "/foo/url",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            serviceData={
              Object {
                "id": "1",
                "name": "Foo",
              }
            }
          >
            <GalleryItem>
              <div>
                <div
                  className=" "
                >
                  <Card
                    className="content-gallery-card"
                    component="article"
                    isHoverable={false}
                  >
                    <article
                      className="pf-c-card content-gallery-card"
                    >
                      <Link
                        className="card-link"
                      >
                        <a
                          className="card-link"
                          href=""
                          onClick={[Function]}
                        >
                          <CardHeader
                            className="card_header"
                          >
                            <div
                              className="pf-c-card__header pf-c-title pf-m-lg card_header"
                            >
                              <CardIcon
                                default="test-file-stub"
                                height={40}
                                src="/api/catalog/v1.0/portfolio_items/undefined/icon"
                                style={Object {}}
                              >
                                <div
                                  style={
                                    Object {
                                      "display": "inline-block",
                                    }
                                  }
                                >
                                  <IconPlaceholder
                                    style={
                                      Object {
                                        "height": 40,
                                      }
                                    }
                                  >
                                    <div
                                      style={
                                        Object {
                                          "height": 40,
                                        }
                                      }
                                    >
                                      <svg
                                        height="40"
                                        width="40"
                                      >
                                        <circle
                                          cx="20"
                                          cy="20"
                                          fill="#ecebeb"
                                          r="20"
                                        />
                                      </svg>
                                    </div>
                                  </IconPlaceholder>
                                  <t
                                    afterLoad={[Function]}
                                    beforeLoad={[Function]}
                                    className="card-image hide"
                                    delayMethod="throttle"
                                    delayTime={300}
                                    effect=""
                                    height={0}
                                    onError={[Function]}
                                    onLoad={[Function]}
                                    placeholderSrc=""
                                    src="/api/catalog/v1.0/portfolio_items/undefined/icon"
                                    style={
                                      Object {
                                        "height": 0,
                                      }
                                    }
                                    threshold={100}
                                    visibleByDefault={false}
                                    wrapperClassName=""
                                  >
                                    <t
                                      afterLoad={[Function]}
                                      beforeLoad={[Function]}
                                      className="card-image hide"
                                      delayMethod="throttle"
                                      delayTime={300}
                                      height={0}
                                      style={
                                        Object {
                                          "height": 0,
                                        }
                                      }
                                      threshold={100}
                                      visibleByDefault={false}
                                    >
                                      <img
                                        className="card-image hide"
                                        height={0}
                                        onError={[Function]}
                                        onLoad={[Function]}
                                        src="/api/catalog/v1.0/portfolio_items/undefined/icon"
                                        style={
                                          Object {
                                            "height": 0,
                                          }
                                        }
                                      />
                                    </t>
                                  </t>
                                </div>
                              </CardIcon>
                            </div>
                          </CardHeader>
                          <ServiceOfferingCardBody
                            closeUrl="/close"
                            history={
                              Object {
                                "action": "POP",
                                "block": [Function],
                                "canGo": [Function],
                                "createHref": [Function],
                                "entries": Array [
                                  Object {
                                    "hash": "",
                                    "key": "ngd7bq",
                                    "pathname": "/foo/url",
                                    "search": "",
                                    "state": undefined,
                                  },
                                ],
                                "go": [Function],
                                "goBack": [Function],
                                "goForward": [Function],
                                "index": 0,
                                "length": 1,
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "ngd7bq",
                                  "pathname": "/foo/url",
                                  "search": "",
                                  "state": undefined,
                                },
                                "push": [Function],
                                "replace": [Function],
                              }
                            }
                            location={
                              Object {
                                "hash": "",
                                "key": "ngd7bq",
                                "pathname": "/foo/url",
                                "search": "",
                                "state": undefined,
                              }
                            }
                            match={
                              Object {
                                "isExact": false,
                                "params": Object {},
                                "path": "/",
                                "url": "/",
                              }
                            }
                            serviceData={
                              Object {
                                "id": "1",
                                "name": "Foo",
                              }
                            }
                          >
                            <CardBody
                              className=""
                              component="div"
                              isFilled={true}
                              style={
                                Object {
                                  "height": 240,
                                }
                              }
                            >
                              <div
                                className="pf-c-card__body"
                                style={
                                  Object {
                                    "height": 240,
                                  }
                                }
                              >
                                <TextContent
                                  className=""
                                >
                                  <div
                                    className="pf-c-content"
                                  >
                                    <Text
                                      className="elipsis-text-overflow"
                                      component="h3"
                                    >
                                      <h3
                                        className="elipsis-text-overflow"
                                        data-pf-content={true}
                                      />
                                    </Text>
                                    <Text
                                      className=""
                                      component="small"
                                    >
                                      <small
                                        className=""
                                        data-pf-content={true}
                                      >
                                         
                                      </small>
                                    </Text>
                                  </div>
                                </TextContent>
                                <ItemDetails
                                  closeUrl="/close"
                                  history={
                                    Object {
                                      "action": "POP",
                                      "block": [Function],
                                      "canGo": [Function],
                                      "createHref": [Function],
                                      "entries": Array [
                                        Object {
                                          "hash": "",
                                          "key": "ngd7bq",
                                          "pathname": "/foo/url",
                                          "search": "",
                                          "state": undefined,
                                        },
                                      ],
                                      "go": [Function],
                                      "goBack": [Function],
                                      "goForward": [Function],
                                      "index": 0,
                                      "length": 1,
                                      "listen": [Function],
                                      "location": Object {
                                        "hash": "",
                                        "key": "ngd7bq",
                                        "pathname": "/foo/url",
                                        "search": "",
                                        "state": undefined,
                                      },
                                      "push": [Function],
                                      "replace": [Function],
                                    }
                                  }
                                  location={
                                    Object {
                                      "hash": "",
                                      "key": "ngd7bq",
                                      "pathname": "/foo/url",
                                      "search": "",
                                      "state": undefined,
                                    }
                                  }
                                  match={
                                    Object {
                                      "isExact": false,
                                      "params": Object {},
                                      "path": "/",
                                      "url": "/",
                                    }
                                  }
                                  serviceData={
                                    Object {
                                      "id": "1",
                                      "name": "Foo",
                                    }
                                  }
                                  toDisplay={
                                    Array [
                                      "description",
                                    ]
                                  }
                                >
                                  <Dotdotdot
                                    clamp={6}
                                    tagName="div"
                                    truncationChar="…"
                                    useNativeClamp={true}
                                  >
                                    <div>
                                      <PropLine
                                        key="card-prop-description"
                                      >
                                        <div />
                                      </PropLine>
                                    </div>
                                  </Dotdotdot>
                                </ItemDetails>
                              </div>
                            </CardBody>
                          </ServiceOfferingCardBody>
                          <CardFooter
                            className=""
                            component="div"
                          >
                            <div
                              className="pf-c-card__footer"
                            />
                          </CardFooter>
                        </a>
                      </Link>
                    </article>
                  </Card>
                </div>
              </div>
            </GalleryItem>
          </PortfolioItem>
        </Route>
      </Router>
    </MemoryRouter>
  </Provider>
</PortfolioItemWrapper>
`;
